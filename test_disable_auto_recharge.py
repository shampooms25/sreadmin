#!/usr/bin/env python3
"""
Teste da funcionalidade de desativa√ß√£o de recarga autom√°tica
"""

import os
import sys
import django

# Configura√ß√£o do Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sreadmin.settings')
django.setup()

from painel.starlink_api import disable_auto_recharge

def test_disable_auto_recharge():
    """Testa a desativa√ß√£o de recarga autom√°tica para uma service line"""
    print("=== TESTE DE DESATIVA√á√ÉO DE RECARGA AUTOM√ÅTICA ===")
    
    account_id = "ACC-2744134-64041-5"
    # Usando uma das service lines que sabemos que tem recarga ativa
    service_line_number = "SL-5242096-78596-88"  # Esta apareceu no teste anterior
    
    print(f"Testando desativa√ß√£o para:")
    print(f"  - Conta: {account_id}")
    print(f"  - Service Line: {service_line_number}")
    
    try:
        result = disable_auto_recharge(account_id, service_line_number)
        
        if 'error' in result:
            print(f"‚ùå Erro: {result['error']}")
        elif result.get('success'):
            print(f"‚úÖ Sucesso! {result['message']}")
        else:
            print(f"‚ö†Ô∏è  Resposta inesperada: {result}")
            
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("‚ö†Ô∏è  ATEN√á√ÉO: Este teste ir√° DESATIVAR a recarga autom√°tica!")
    print("‚ö†Ô∏è  Pressione Ctrl+C para cancelar, ou Enter para continuar...")
    
    try:
        input()
        test_disable_auto_recharge()
    except KeyboardInterrupt:
        print("\nüõë Teste cancelado pelo usu√°rio.")
