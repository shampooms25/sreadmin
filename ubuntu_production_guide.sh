#!/bin/bash
# GUIA COMPLETO: Corre√ß√£o em Produ√ß√£o Ubuntu
# ==========================================

echo "üêß POPPFIRE API - Corre√ß√£o para Produ√ß√£o Ubuntu"
echo "==============================================="

echo ""
echo "üìã PASSOS PARA CORRIGIR EM PRODU√á√ÉO:"
echo ""

echo "1Ô∏è‚É£ CONECTAR NO SERVIDOR UBUNTU"
echo "   ssh usuario@SEU-IP-SERVIDOR"
echo "   cd /var/www/sreadmin"
echo ""

echo "2Ô∏è‚É£ BACKUP DE SEGURAN√áA"
echo "   sudo cp -r /var/www/sreadmin /var/www/sreadmin.backup.$(date +%Y%m%d_%H%M%S)"
echo "   python manage.py dumpdata > backup_completo_$(date +%Y%m%d_%H%M%S).json"
echo ""

echo "3Ô∏è‚É£ ATUALIZAR C√ìDIGO (se necess√°rio)"
echo "   git pull origin main"
echo "   sudo chown -R www-data:www-data /var/www/sreadmin/"
echo ""

echo "4Ô∏è‚É£ EXECUTAR SCRIPT DE DEPLOY AUTOM√ÅTICO"
echo "   chmod +x production_deploy.sh"
echo "   sudo ./production_deploy.sh"
echo ""

echo "OU EXECUTAR MANUALMENTE:"
echo ""

echo "5Ô∏è‚É£ CONFIGURAR AMBIENTE VIRTUAL"
echo "   sudo -u www-data python3 -m venv venv"
echo "   sudo -u www-data source venv/bin/activate"
echo "   sudo -u www-data pip install -r requirements.txt"
echo ""

echo "6Ô∏è‚É£ CONFIGURAR BANCO DE DADOS"
echo "   sudo -u www-data python manage.py migrate"
echo "   sudo -u www-data python manage.py collectstatic --noinput"
echo ""

echo "7Ô∏è‚É£ CRIAR TOKENS DE AUTENTICA√á√ÉO"
echo "   sudo -u www-data python manage.py shell << 'EOF'"
echo "from captive_portal.models import ApplianceToken"
echo ""
echo "# Token para teste Postman"
echo "obj, created = ApplianceToken.objects.get_or_create("
echo "    token='c8c786467d4a8d2825eaf549534d1ab0',"
echo "    defaults={"
echo "        'appliance_id': 'POSTMAN-TEST',"
echo "        'appliance_name': 'Appliance Teste Postman',"
echo "        'description': 'Token para testes via Postman - Ubuntu',"
echo "        'is_active': True,"
echo "    }"
echo ")"
echo "print(f'Token Postman: {obj.token} - Ativo: {obj.is_active}')"
echo ""
echo "# Token para produ√ß√£o"
echo "obj2, created2 = ApplianceToken.objects.get_or_create("
echo "    token='f8e7d6c5b4a3928170695e4c3d2b1a0f',"
echo "    defaults={"
echo "        'appliance_id': 'APPLIANCE-PROD-001',"
echo "        'appliance_name': 'Appliance POPPFIRE Produ√ß√£o',"
echo "        'description': 'Token para appliance de produ√ß√£o',"
echo "        'is_active': True,"
echo "    }"
echo ")"
echo "print(f'Token Produ√ß√£o: {obj2.token} - Ativo: {obj2.is_active}')"
echo "EOF"
echo ""

echo "8Ô∏è‚É£ CONFIGURAR PERMISS√ïES"
echo "   sudo chown -R www-data:www-data /var/www/sreadmin/"
echo "   sudo chmod -R 755 /var/www/sreadmin/"
echo "   sudo chmod -R 775 /var/www/sreadmin/media/"
echo "   sudo chmod 644 /var/www/sreadmin/appliance_tokens.json 2>/dev/null || true"
echo ""

echo "9Ô∏è‚É£ CONFIGURAR SYSTEMD SERVICE"
echo "   sudo tee /etc/systemd/system/poppfire-django.service << 'EOF'"
echo "[Unit]"
echo "Description=POPPFIRE Django Application"
echo "After=network.target postgresql.service"
echo ""
echo "[Service]"
echo "Type=exec"
echo "User=www-data"
echo "Group=www-data"
echo "WorkingDirectory=/var/www/sreadmin"
echo "Environment=DJANGO_SETTINGS_MODULE=sreadmin.settings"
echo "ExecStart=/var/www/sreadmin/venv/bin/python manage.py runserver 0.0.0.0:8000"
echo "Restart=always"
echo "RestartSec=10"
echo ""
echo "[Install]"
echo "WantedBy=multi-user.target"
echo "EOF"
echo ""

echo "üîü INICIAR SERVI√áOS"
echo "   sudo systemctl daemon-reload"
echo "   sudo systemctl enable poppfire-django"
echo "   sudo systemctl start poppfire-django"
echo "   sudo systemctl status poppfire-django"
echo ""

echo "1Ô∏è‚É£1Ô∏è‚É£ CONFIGURAR NGINX (OPCIONAL)"
echo "   sudo tee /etc/nginx/sites-available/poppfire << 'EOF'"
echo "server {"
echo "    listen 80;"
echo "    server_name SEU-IP-SERVIDOR;"
echo ""
echo "    location /api/ {"
echo "        proxy_pass http://127.0.0.1:8000;"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "        proxy_set_header Authorization \$http_authorization;"
echo "    }"
echo ""
echo "    location /admin/ {"
echo "        proxy_pass http://127.0.0.1:8000;"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "    }"
echo ""
echo "    location /static/ {"
echo "        alias /var/www/sreadmin/static/;"
echo "        expires 30d;"
echo "    }"
echo ""
echo "    location /media/ {"
echo "        alias /var/www/sreadmin/media/;"
echo "        expires 7d;"
echo "    }"
echo "}"
echo "EOF"
echo ""
echo "   sudo ln -sf /etc/nginx/sites-available/poppfire /etc/nginx/sites-enabled/"
echo "   sudo nginx -t"
echo "   sudo systemctl reload nginx"
echo ""

echo "1Ô∏è‚É£2Ô∏è‚É£ TESTAR FUNCIONAMENTO"
echo "   # Testar API Info"
echo "   curl -H 'Authorization: Bearer c8c786467d4a8d2825eaf549534d1ab0' \\"
echo "        http://SEU-IP:8000/api/appliances/info/"
echo ""
echo "   # Testar Portal Status"
echo "   curl -H 'Authorization: Bearer c8c786467d4a8d2825eaf549534d1ab0' \\"
echo "        http://SEU-IP:8000/api/appliances/portal/status/"
echo ""
echo "   # Testar Download"
echo "   curl -H 'Authorization: Bearer c8c786467d4a8d2825eaf549534d1ab0' \\"
echo "        http://SEU-IP:8000/api/appliances/portal/download/?type=with_video"
echo ""

echo "1Ô∏è‚É£3Ô∏è‚É£ VERIFICAR LOGS (se houver problemas)"
echo "   sudo journalctl -u poppfire-django -f"
echo "   sudo tail -f /var/log/nginx/error.log"
echo "   python manage.py check"
echo ""

echo "1Ô∏è‚É£4Ô∏è‚É£ URLS FINAIS PARA TESTE"
echo "   Admin: http://SEU-IP:8000/admin/"
echo "   API Info: http://SEU-IP:8000/api/appliances/info/"
echo "   Portal Status: http://SEU-IP:8000/api/appliances/portal/status/"
echo "   Download: http://SEU-IP:8000/api/appliances/portal/download/?type=with_video"
echo ""

echo "üîë TOKENS CONFIGURADOS:"
echo "   Teste: c8c786467d4a8d2825eaf549534d1ab0"
echo "   Produ√ß√£o: f8e7d6c5b4a3928170695e4c3d2b1a0f"
echo ""

echo "‚ö†Ô∏è IMPORTANTE:"
echo "   - Substitua SEU-IP pelo IP real do servidor"
echo "   - Use HTTP (n√£o HTTPS) a menos que tenha configurado SSL"
echo "   - Verifique se a porta 8000 est√° liberada no firewall"
echo "   - Para SSL, use Let's Encrypt com certbot"
echo ""

echo "üéâ Configura√ß√£o conclu√≠da!"
