#!/usr/bin/env python
"""
Teste r√°pido para verificar se o formul√°rio Portal com V√≠deo est√° funcionando
"""
import os
import django
import sys

# Configurar Django
sys.path.append(os.path.dirname(__file__))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sreadmin.settings')
django.setup()

from painel.admin import GerenciarPortalForm
from painel.models import EldGerenciarPortal

def test_portal_form():
    """
    Testa o formul√°rio customizado para Portal com V√≠deo
    """
    print("=== TESTE DO FORMUL√ÅRIO PORTAL COM V√çDEO ===\n")
    
    # Testar instancia√ß√£o do formul√°rio
    try:
        form = GerenciarPortalForm()
        print("‚úÖ Formul√°rio GerenciarPortalForm criado com sucesso!")
        
        # Verificar campos dispon√≠veis
        print(f"\nüìã Campos do formul√°rio:")
        for field_name in form.fields:
            field = form.fields[field_name]
            print(f"   ‚Ä¢ {field_name}: {field.__class__.__name__}")
        
        # Verificar se portal_sem_video N√ÉO est√° nos campos
        if 'portal_sem_video' not in form.fields:
            print(f"\n‚úÖ Campo 'portal_sem_video' foi removido com sucesso do formul√°rio!")
        else:
            print(f"\n‚ùå Campo 'portal_sem_video' ainda est√° presente no formul√°rio!")
            
        # Verificar se ativar_video N√ÉO est√° nos campos
        if 'ativar_video' not in form.fields:
            print(f"‚úÖ Campo 'ativar_video' foi removido com sucesso do formul√°rio!")
        else:
            print(f"‚ùå Campo 'ativar_video' ainda est√° presente no formul√°rio!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar formul√°rio: {str(e)}")
        return False

def test_form_validation():
    """
    Testa valida√ß√£o b√°sica do formul√°rio
    """
    print(f"\nüß™ TESTE DE VALIDA√á√ÉO:")
    
    try:
        # Dados de teste v√°lidos
        data = {
            'ativo': True,
            'nome_video': None,  # Pode ser None
            'captive_portal_zip': None  # Pode ser None
        }
        
        form = GerenciarPortalForm(data=data)
        
        if form.is_valid():
            print("‚úÖ Formul√°rio v√°lido com dados b√°sicos!")
        else:
            print(f"‚ö†Ô∏è Formul√°rio inv√°lido: {form.errors}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro na valida√ß√£o: {str(e)}")
        return False

if __name__ == "__main__":
    success1 = test_portal_form()
    success2 = test_form_validation()
    
    if success1 and success2:
        print(f"\nüéâ TODOS OS TESTES PASSARAM!")
        print(f"   Formul√°rio Portal com V√≠deo est√° configurado corretamente.")
        print(f"   Agora teste em: http://localhost:8000/admin/captive_portal/gerenciarportalproxy/add/")
    else:
        print(f"\nüí• ALGUNS TESTES FALHARAM")
        print(f"   Verifique os erros acima antes de testar na interface.")
