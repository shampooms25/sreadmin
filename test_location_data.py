#!/usr/bin/env python
"""
Teste das altera√ß√µes de localiza√ß√£o no sistema de recarga autom√°tica
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sreadmin.settings')
django.setup()

def test_location_data():
    """Testa se os dados de localiza√ß√£o est√£o sendo inclu√≠dos"""
    from painel.starlink_api import get_service_lines_with_auto_recharge_status
    
    print("üîç Testando dados de localiza√ß√£o nas service lines...")
    
    # Usar uma conta de teste
    test_account = "ACC-3697602-31930-14"
    
    try:
        result = get_service_lines_with_auto_recharge_status(test_account)
        
        if 'error' in result:
            print(f"‚ùå Erro: {result['error']}")
            return False
        
        service_lines = result.get('service_lines', [])
        print(f"‚úÖ {len(service_lines)} service lines obtidas")
        
        # Verificar se as informa√ß√µes de localiza√ß√£o est√£o presentes
        lines_with_location = 0
        lines_with_formatted_location = 0
        
        for i, line in enumerate(service_lines[:5]):  # Mostrar apenas as primeiras 5
            number = line.get('serviceLineNumber', 'N/A')
            location = line.get('serviceLocation', 'N/A')
            formatted_location = line.get('formattedLocation', 'N/A')
            nickname = line.get('nickname', 'N/A')
            status = line.get('status', 'N/A')
            auto_recharge = line.get('auto_recharge_status', {})
            
            print(f"\nüìç Service Line {i+1}: {number}")
            print(f"   ‚Ä¢ Localiza√ß√£o: {location}")
            print(f"   ‚Ä¢ Localiza√ß√£o Formatada: {formatted_location}")
            print(f"   ‚Ä¢ Apelido: {nickname}")
            print(f"   ‚Ä¢ Status: {status}")
            print(f"   ‚Ä¢ Recarga Autom√°tica: {'ATIVA' if auto_recharge.get('active') else 'INATIVA'}")
            
            if location != 'N/A' and location != 'Localiza√ß√£o n√£o informada':
                lines_with_location += 1
            if formatted_location != 'N/A':
                lines_with_formatted_location += 1
        
        print(f"\nüìä Resumo:")
        print(f"   ‚Ä¢ Total de linhas: {len(service_lines)}")
        print(f"   ‚Ä¢ Linhas com localiza√ß√£o: {lines_with_location}")
        print(f"   ‚Ä¢ Linhas com localiza√ß√£o formatada: {lines_with_formatted_location}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        return False

def main():
    print("üöÄ TESTE DE LOCALIZA√á√ÉO - SISTEMA STARLINK")
    print("=" * 50)
    
    success = test_location_data()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ TESTE CONCLU√çDO COM SUCESSO!")
        print("‚úÖ Dados de localiza√ß√£o sendo carregados corretamente")
    else:
        print("‚ö†Ô∏è PROBLEMAS ENCONTRADOS NO TESTE")

if __name__ == "__main__":
    main()
